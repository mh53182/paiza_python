# あなたはぱいざ幼稚園の先生です。あなたのクラスには N 人の園児がおり、それぞれの園児には 1 から N までの出席番号が振られています。

# 今日、あなたが受け持つクラスで「じゃんけん列車」というゲームをすることになりました。
# じゃんけん列車のおける「列車」とは、園児が一列に並んだ様子を列車に見立てた表現です。
# じゃんけん列車は、次のようなルールのゲームです。

# ・初め、それぞれの園児は 1 人からなる列車である。
# ・先生が「やめ」の合図をするまで、以下が繰り返される。
# 1. 2 つの列車の先頭の園児同士がジャンケンをする(勝敗が決まるまで続ける)。
# 2. 負けた列車は、勝った列車の最後尾に連結し、一つの列車となる。
# ・「やめ」の合図があった時点で、最も長い列車の先頭の園児が優勝者となる。ただし、そのような列車が複数存在するなら、それらの先頭の園児は全員優勝者とする。

# 園児の人数と、ゲーム中のじゃんけんの勝敗記録の情報が与えられたときに、ゲームの優勝者の出席番号の一覧を表示するプログラムを作成してください。
# ただし、園児たちはルールを守ってゲームを楽しみ、ジャンケンの勝敗記録は正確に記録されました。

# ・1 行目に園児の人数を表す整数 N と、じゃんけんの勝敗記録の個数を表す整数 M が与えられます。
# ・続く M 行のうちの i 行目 (1 ≦ i ≦ M) には、i 回目のじゃんけんの勝敗記録の情報を表す整数 x_i, y_i がこの順で半角スペース区切りで与えられます。
#     これは、「i 回目のじゃんけんでは、出席番号 x_i の園児が出席番号 y_i の園児に勝った」という情報を表します。
# ・入力は合計で M + 1 行となり、入力値最終行の末尾に改行が 1 つ入ります。

n, m = map(int, input().split())

result =[]

# じゃんけんの結果のデータペアをタプルとして要素に持つリストを作成
for i in range(m):
    x_i, y_i = map(int, input().split())
    t = x_i, y_i
    result.append(t)

# 列を表す空の辞書
line = {}

# 1から"n"までの園児に対して自分を値とするリスト型のデータを登録
for j in range(1, n+1):
    line[j] = [j]

# ↑ を内包表記するとこうなる
# lines = {i: [i] for i in range(1, n + 1)}

# じゃんけんの結果（タプル入りリスト）を処理
for win, lose in result:
    # 勝った人の列に負けた人の列を追加し、負けた人の列を空にする
    line[win] += line[lose]
    line[lose] = []

# 最長の列を探す
# 最長リストの長さを保持する変数。初期値-1は、ループの最初で必ず負けるため
max_length = -1

# 最長の列を持つキーを保持する変数　無くても動く。ループ内で適切に値が代入されなかったとき、これが無いとエラーになる。
# long_line = None

# ここから複数の勝者を検知できない失敗コード

# for k, v in line.items():
#     # 現在のキーのリストの長さが、これまでの最長よりも長い場合
#     if len(v) > max_length:
#         # 最長リストの長さを更新
#         max_length = len(v)
#         # 最長リストを持つキーを更新
#         long_line = k  

# # ラムダで書くとうこうなる
# # long_line = max(line.keys(), key=lambda k: len(line[k]))

# print(long_line)

# ここまで

for v in line.values():
    # 現在のキーのリストの長さが、これまでの最長よりも長い場合
    if len(v) > max_length:
        # 最長リストの長さを更新　※あくまで長さだけを判定
        max_length = len(v)

# 最長の列を持つ園児のリストを作成
long_line = []

# 各列を表す辞書に対して、最長の列と同じ長さかどうか判定してリストに追加
for k, v in line.items():
    if len(v) == max_length:
        long_line.append(k)

# リストの内容を改行表示
print(*long_line, sep = '\n')